package tests;// Generated by Selenium IDE

import model.ContactData;
import model.GroupData;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.WebDriver;

import java.util.ArrayList;
import java.util.List;

public class ContactCreationTests extends TestBase{
    private WebDriver driver;

    public static List<ContactData> contactProvider() {
        var result = new ArrayList<ContactData>();
        for (var firstname : List.of("", "firstname")){
            for (var lastname : List.of("", "lastname")){
                for (var address : List.of("", "address")){
                    for (var mobile : List.of("", "mobile")){
                        for (var email : List.of("", "email")){
                            result.add(new ContactData(firstname, lastname, address, mobile, email));
                        }
                    }
                }
            }
        }
        for(int i = 0; i < 5; i++){
            result.add(new ContactData(randomString((i+1)*10), randomString((i+1)*10), randomString((i+1)*10),randomString((i+1)*10),randomString((i+1)*10)));
        }
        return result;
    }

    @ParameterizedTest
    @MethodSource("contactProvider")
    public void CanCreateMultipleContact(ContactData contact) {
        int contactCount = app.contacts().getCount();
        app.contacts().CreateContact(contact);
        int newContactCount = app.contacts().getCount();
        Assertions.assertEquals(contactCount + 1, newContactCount);
    }

    public static List<ContactData> negativeContactProvider() {
        var result = new ArrayList<ContactData>(List.of(
                new ContactData("contact'", "", "", "", "")));
        return result;
    }

    @ParameterizedTest
    @MethodSource("negativeContactProvider")
    public void CanNotCreateContact(ContactData contact) {
        int contactCount = app.contacts().getCount();
        app.contacts().CreateContact(contact);
        int newContactCount = app.contacts().getCount();
        Assertions.assertEquals(contactCount, newContactCount);
    }
}